name: CI Pipeline

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: portfolio_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run linting (flake8)
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true

      - name: Run migrations
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        run: |
          python manage.py migrate --noinput

      - name: Run tests with coverage
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html --cov-report=term

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Check migrations
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        run: |
          python manage.py makemigrations --check --dry-run --no-input

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: False
        run: |
          python manage.py collectstatic --no-input --clear

      - name: Check deployment readiness
        env:
          DJANGO_SETTINGS_MODULE: core.settings
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: False
        run: |
          python manage.py check --deploy --fail-level WARNING
